<?xml version="1.0" encoding="UTF-8"?>
<Bucket
   uuid = "457D15B0-E817-469A-99FD-1AD7CAC9EAC0"
   type = "1"
   version = "2.0">
   <Breakpoints>
      <BreakpointProxy
         BreakpointExtensionID = "Xcode.Breakpoint.FileBreakpoint">
         <BreakpointContent
            uuid = "E7A056B6-25A3-4D8F-8CD3-CD0D11EE3CA8"
            shouldBeEnabled = "No"
            ignoreCount = "0"
            continueAfterRunningActions = "No"
            filePath = "AllInOne/ManuItems/Home/HomeView.swift"
            startingColumnNumber = "9223372036854775807"
            endingColumnNumber = "9223372036854775807"
            startingLineNumber = "86"
            endingLineNumber = "86"
            landmarkName = "sliceLabelView(fraction:data:)"
            landmarkType = "7">
         </BreakpointContent>
      </BreakpointProxy>
      <BreakpointProxy
         BreakpointExtensionID = "Xcode.Breakpoint.FileBreakpoint">
         <BreakpointContent
            uuid = "F7324D9F-0324-4BFC-9089-897F59B14E6A"
            shouldBeEnabled = "No"
            ignoreCount = "0"
            continueAfterRunningActions = "No"
            filePath = "AllInOne/ManuItems/Home/HomeView.swift"
            startingColumnNumber = "9223372036854775807"
            endingColumnNumber = "9223372036854775807"
            startingLineNumber = "87"
            endingLineNumber = "87"
            landmarkName = "sliceLabelView(fraction:data:)"
            landmarkType = "7">
         </BreakpointContent>
      </BreakpointProxy>
      <BreakpointProxy
         BreakpointExtensionID = "Xcode.Breakpoint.FileBreakpoint">
         <BreakpointContent
            uuid = "E8C3DB8C-4C5C-49D5-9DE9-32048405B7F0"
            shouldBeEnabled = "Yes"
            ignoreCount = "0"
            continueAfterRunningActions = "No"
            filePath = "AllInOne/ManuItems/Home/HomeView.swift"
            startingColumnNumber = "9223372036854775807"
            endingColumnNumber = "9223372036854775807"
            startingLineNumber = "43"
            endingLineNumber = "43"
            landmarkName = "body"
            landmarkType = "24">
            <Locations>
               <Location
                  uuid = "E8C3DB8C-4C5C-49D5-9DE9-32048405B7F0 - 245e36581ce8e1f7"
                  shouldBeEnabled = "Yes"
                  ignoreCount = "0"
                  continueAfterRunningActions = "No"
                  symbolName = "closure #1 () -&gt; SwiftUI.TupleView&lt;(SwiftUI._ConditionalContent&lt;SwiftUI.VStack&lt;&lt;&lt;opaque return type of AllInOne.HomeView.content() -&gt; some&gt;&gt;.0&gt;, SwiftUI.HStack&lt;&lt;&lt;opaque return type of AllInOne.HomeView.content() -&gt; some&gt;&gt;.0&gt;&gt;, Swift.Optional&lt;&lt;&lt;opaque return type of SwiftUI.View.padding(CoreGraphics.CGFloat) -&gt; some&gt;&gt;.0&gt;)&gt; in closure #1 () -&gt; SwiftUI.ZStack&lt;SwiftUI.TupleView&lt;(SwiftUI._ConditionalContent&lt;SwiftUI.VStack&lt;&lt;&lt;opaque return type of AllInOne.HomeView.content() -&gt; some&gt;&gt;.0&gt;, SwiftUI.HStack&lt;&lt;&lt;opaque return type of AllInOne.HomeView.content() -&gt; some&gt;&gt;.0&gt;&gt;, Swift.Optional&lt;&lt;&lt;opaque return type of SwiftUI.View.padding(CoreGraphics.CGFloat) -&gt; some&gt;&gt;.0&gt;)&gt;&gt; in closure #2 (SwiftUI.GeometryProxy) -&gt; SwiftUI.Group&lt;SwiftUI.ZStack&lt;SwiftUI.TupleView&lt;(SwiftUI._ConditionalContent&lt;SwiftUI.VStack&lt;&lt;&lt;opaque return type of AllInOne.HomeView.content() -&gt; some&gt;&gt;.0&gt;, SwiftUI.HStack&lt;&lt;&lt;opaque return type of AllInOne.HomeView.content() -&gt; some&gt;&gt;.0&gt;&gt;, Swift.Optional&lt;&lt;&lt;opaque return type of SwiftUI.View.padding(CoreGraphics.CGFloat) -&gt; some&gt;&gt;.0&gt;)&gt;&gt;&gt; in closure #1 () -&gt; SwiftUI.TupleView&lt;(SwiftUI.HStack&lt;SwiftUI.TupleView&lt;(SwiftUI.Button&lt;&lt;&lt;opaque return type of SwiftUI.View.frame(width: Swift.Optional&lt;CoreGraphics.CGFloat&gt;, height: Swift.Optional&lt;CoreGraphics.CGFloat&gt;, alignment: SwiftUI.Alignment) -&gt; some&gt;&gt;.0&gt;, SwiftUI.Spacer)&gt;&gt;, SwiftUI.GeometryReader&lt;SwiftUI.Group&lt;SwiftUI.ZStack&lt;SwiftUI.TupleView&lt;(SwiftUI._ConditionalContent&lt;SwiftUI.VStack&lt;&lt;&lt;opaque return type of AllInOne.HomeView.content() -&gt; some&gt;&gt;.0&gt;, SwiftUI.HStack&lt;&lt;&lt;opaque return type of AllInOne.HomeView.content() -&gt; some&gt;&gt;.0&gt;&gt;, Swift.Optional&lt;&lt;&lt;opaque return type of SwiftUI.View.padding(CoreGraphics.CGFloat) -&gt; some&gt;&gt;.0&gt;)&gt;&gt;&gt;&gt;)&gt; in AllInOne.HomeView.body.getter : some"
                  moduleName = "AllInOne"
                  usesParentBreakpointCondition = "Yes"
                  urlString = "file:///Users/suris/Documents/GitHub/AllInOne/AllInOne/ManuItems/Home/HomeView.swift"
                  startingColumnNumber = "9223372036854775807"
                  endingColumnNumber = "9223372036854775807"
                  startingLineNumber = "43"
                  endingLineNumber = "43"
                  offsetFromSymbolStart = "1780">
               </Location>
               <Location
                  uuid = "E8C3DB8C-4C5C-49D5-9DE9-32048405B7F0 - ba79f6f074fe9518"
                  shouldBeEnabled = "Yes"
                  ignoreCount = "0"
                  continueAfterRunningActions = "No"
                  symbolName = "closure #3 (Swift.Double) -&gt; Swift.String in closure #1 () -&gt; SwiftUI.TupleView&lt;(SwiftUI._ConditionalContent&lt;SwiftUI.VStack&lt;&lt;&lt;opaque return type of AllInOne.HomeView.content() -&gt; some&gt;&gt;.0&gt;, SwiftUI.HStack&lt;&lt;&lt;opaque return type of AllInOne.HomeView.content() -&gt; some&gt;&gt;.0&gt;&gt;, Swift.Optional&lt;&lt;&lt;opaque return type of SwiftUI.View.padding(CoreGraphics.CGFloat) -&gt; some&gt;&gt;.0&gt;)&gt; in closure #1 () -&gt; SwiftUI.ZStack&lt;SwiftUI.TupleView&lt;(SwiftUI._ConditionalContent&lt;SwiftUI.VStack&lt;&lt;&lt;opaque return type of AllInOne.HomeView.content() -&gt; some&gt;&gt;.0&gt;, SwiftUI.HStack&lt;&lt;&lt;opaque return type of AllInOne.HomeView.content() -&gt; some&gt;&gt;.0&gt;&gt;, Swift.Optional&lt;&lt;&lt;opaque return type of SwiftUI.View.padding(CoreGraphics.CGFloat) -&gt; some&gt;&gt;.0&gt;)&gt;&gt; in closure #2 (SwiftUI.GeometryProxy) -&gt; SwiftUI.Group&lt;SwiftUI.ZStack&lt;SwiftUI.TupleView&lt;(SwiftUI._ConditionalContent&lt;SwiftUI.VStack&lt;&lt;&lt;opaque return type of AllInOne.HomeView.content() -&gt; some&gt;&gt;.0&gt;, SwiftUI.HStack&lt;&lt;&lt;opaque return type of AllInOne.HomeView.content() -&gt; some&gt;&gt;.0&gt;&gt;, Swift.Optional&lt;&lt;&lt;opaque return type of SwiftUI.View.padding(CoreGraphics.CGFloat) -&gt; some&gt;&gt;.0&gt;)&gt;&gt;&gt; in closure #1 () -&gt; SwiftUI.TupleView&lt;(SwiftUI.HStack&lt;SwiftUI.TupleView&lt;(SwiftUI.Button&lt;&lt;&lt;opaque return type of SwiftUI.View.frame(width: Swift.Optional&lt;CoreGraphics.CGFloat&gt;, height: Swift.Optional&lt;CoreGraphics.CGFloat&gt;, alignment: SwiftUI.Alignment) -&gt; some&gt;&gt;.0&gt;, SwiftUI.Spacer)&gt;&gt;, SwiftUI.GeometryReader&lt;SwiftUI.Group&lt;SwiftUI.ZStack&lt;SwiftUI.TupleView&lt;(SwiftUI._ConditionalContent&lt;SwiftUI.VStack&lt;&lt;&lt;opaque return type of AllInOne.HomeView.content() -&gt; some&gt;&gt;.0&gt;, SwiftUI.HStack&lt;&lt;&lt;opaque return type of AllInOne.HomeView.content() -&gt; some&gt;&gt;.0&gt;&gt;, Swift.Optional&lt;&lt;&lt;opaque return type of SwiftUI.View.padding(CoreGraphics.CGFloat) -&gt; some&gt;&gt;.0&gt;)&gt;&gt;&gt;&gt;)&gt; in AllInOne.HomeView.body.getter : some"
                  moduleName = "AllInOne"
                  usesParentBreakpointCondition = "Yes"
                  urlString = "file:///Users/suris/Documents/GitHub/AllInOne/AllInOne/ManuItems/Home/HomeView.swift"
                  startingColumnNumber = "9223372036854775807"
                  endingColumnNumber = "9223372036854775807"
                  startingLineNumber = "44"
                  endingLineNumber = "44"
                  offsetFromSymbolStart = "56">
               </Location>
               <Location
                  uuid = "E8C3DB8C-4C5C-49D5-9DE9-32048405B7F0 - 245e36581ce8e1f7"
                  shouldBeEnabled = "Yes"
                  ignoreCount = "0"
                  continueAfterRunningActions = "No"
                  symbolName = "closure #1 () -&gt; SwiftUI.TupleView&lt;(SwiftUI._ConditionalContent&lt;SwiftUI.VStack&lt;&lt;&lt;opaque return type of AllInOne.HomeView.content() -&gt; some&gt;&gt;.0&gt;, SwiftUI.HStack&lt;&lt;&lt;opaque return type of AllInOne.HomeView.content() -&gt; some&gt;&gt;.0&gt;&gt;, Swift.Optional&lt;&lt;&lt;opaque return type of SwiftUI.View.padding(CoreGraphics.CGFloat) -&gt; some&gt;&gt;.0&gt;)&gt; in closure #1 () -&gt; SwiftUI.ZStack&lt;SwiftUI.TupleView&lt;(SwiftUI._ConditionalContent&lt;SwiftUI.VStack&lt;&lt;&lt;opaque return type of AllInOne.HomeView.content() -&gt; some&gt;&gt;.0&gt;, SwiftUI.HStack&lt;&lt;&lt;opaque return type of AllInOne.HomeView.content() -&gt; some&gt;&gt;.0&gt;&gt;, Swift.Optional&lt;&lt;&lt;opaque return type of SwiftUI.View.padding(CoreGraphics.CGFloat) -&gt; some&gt;&gt;.0&gt;)&gt;&gt; in closure #2 (SwiftUI.GeometryProxy) -&gt; SwiftUI.Group&lt;SwiftUI.ZStack&lt;SwiftUI.TupleView&lt;(SwiftUI._ConditionalContent&lt;SwiftUI.VStack&lt;&lt;&lt;opaque return type of AllInOne.HomeView.content() -&gt; some&gt;&gt;.0&gt;, SwiftUI.HStack&lt;&lt;&lt;opaque return type of AllInOne.HomeView.content() -&gt; some&gt;&gt;.0&gt;&gt;, Swift.Optional&lt;&lt;&lt;opaque return type of SwiftUI.View.padding(CoreGraphics.CGFloat) -&gt; some&gt;&gt;.0&gt;)&gt;&gt;&gt; in closure #1 () -&gt; SwiftUI.TupleView&lt;(SwiftUI.HStack&lt;SwiftUI.TupleView&lt;(SwiftUI.Button&lt;&lt;&lt;opaque return type of SwiftUI.View.frame(width: Swift.Optional&lt;CoreGraphics.CGFloat&gt;, height: Swift.Optional&lt;CoreGraphics.CGFloat&gt;, alignment: SwiftUI.Alignment) -&gt; some&gt;&gt;.0&gt;, SwiftUI.Spacer)&gt;&gt;, SwiftUI.GeometryReader&lt;SwiftUI.Group&lt;SwiftUI.ZStack&lt;SwiftUI.TupleView&lt;(SwiftUI._ConditionalContent&lt;SwiftUI.VStack&lt;&lt;&lt;opaque return type of AllInOne.HomeView.content() -&gt; some&gt;&gt;.0&gt;, SwiftUI.HStack&lt;&lt;&lt;opaque return type of AllInOne.HomeView.content() -&gt; some&gt;&gt;.0&gt;&gt;, Swift.Optional&lt;&lt;&lt;opaque return type of SwiftUI.View.padding(CoreGraphics.CGFloat) -&gt; some&gt;&gt;.0&gt;)&gt;&gt;&gt;&gt;)&gt; in AllInOne.HomeView.body.getter : some"
                  moduleName = "AllInOne"
                  usesParentBreakpointCondition = "Yes"
                  urlString = "file:///Users/suris/Documents/GitHub/AllInOne/AllInOne/ManuItems/Home/HomeView.swift"
                  startingColumnNumber = "9223372036854775807"
                  endingColumnNumber = "9223372036854775807"
                  startingLineNumber = "43"
                  endingLineNumber = "43"
                  offsetFromSymbolStart = "7124">
               </Location>
            </Locations>
         </BreakpointContent>
      </BreakpointProxy>
      <BreakpointProxy
         BreakpointExtensionID = "Xcode.Breakpoint.FileBreakpoint">
         <BreakpointContent
            uuid = "173A89F0-8E44-4684-9139-56E799CCBCB5"
            shouldBeEnabled = "Yes"
            ignoreCount = "0"
            continueAfterRunningActions = "No"
            filePath = "AllInOne/SwiftUIGraphs/Views/Pie Chart/DYFractionChartLegendView.swift"
            startingColumnNumber = "9223372036854775807"
            endingColumnNumber = "9223372036854775807"
            startingLineNumber = "30"
            endingLineNumber = "30"
            landmarkName = "body"
            landmarkType = "24">
            <Locations>
               <Location
                  uuid = "173A89F0-8E44-4684-9139-56E799CCBCB5 - 9e1286dd69403bf2"
                  shouldBeEnabled = "Yes"
                  ignoreCount = "0"
                  continueAfterRunningActions = "No"
                  symbolName = "closure #1 () -&gt; SwiftUI.ForEach&lt;Swift.Array&lt;AllInOne.DYPieFraction&gt;, AllInOne.DYPieFraction, &lt;&lt;opaque return type of AllInOne.DYFractionChartLegendView.content(fraction: AllInOne.DYPieFraction) -&gt; some&gt;&gt;.0&gt; in closure #1 (Swift.Array&lt;AllInOne.DYPieFraction&gt;) -&gt; SwiftUI.HStack&lt;SwiftUI.ForEach&lt;Swift.Array&lt;AllInOne.DYPieFraction&gt;, AllInOne.DYPieFraction, &lt;&lt;opaque return type of AllInOne.DYFractionChartLegendView.content(fraction: AllInOne.DYPieFraction) -&gt; some&gt;&gt;.0&gt;&gt; in closure #1 () -&gt; SwiftUI.ForEach&lt;Swift.Array&lt;Swift.Array&lt;AllInOne.DYPieFraction&gt;&gt;, Swift.Array&lt;AllInOne.DYPieFraction&gt;, SwiftUI.HStack&lt;SwiftUI.ForEach&lt;Swift.Array&lt;AllInOne.DYPieFraction&gt;, AllInOne.DYPieFraction, &lt;&lt;opaque return type of AllInOne.DYFractionChartLegendView.content(fraction: AllInOne.DYPieFraction) -&gt; some&gt;&gt;.0&gt;&gt;&gt; in closure #1 () -&gt; &lt;&lt;opaque return type of SwiftUI.View.padding(SwiftUI.Edge.Set, Swift.Optional&lt;CoreGraphics.CGFloat&gt;) -&gt; some&gt;&gt;.0 in AllInOne.DYFractionChartLegendView.body.getter : some"
                  moduleName = "AllInOne"
                  usesParentBreakpointCondition = "Yes"
                  urlString = "file:///Users/suris/Documents/GitHub/AllInOne/AllInOne/SwiftUIGraphs/Views/Pie%20Chart/DYFractionChartLegendView.swift"
                  startingColumnNumber = "9223372036854775807"
                  endingColumnNumber = "9223372036854775807"
                  startingLineNumber = "43"
                  endingLineNumber = "43"
                  offsetFromSymbolStart = "148">
               </Location>
               <Location
                  uuid = "173A89F0-8E44-4684-9139-56E799CCBCB5 - b8fcc8a614e4490e"
                  shouldBeEnabled = "Yes"
                  ignoreCount = "0"
                  continueAfterRunningActions = "No"
                  symbolName = "closure #1 (AllInOne.DYPieFraction) -&gt; &lt;&lt;opaque return type of AllInOne.DYFractionChartLegendView.content(fraction: AllInOne.DYPieFraction) -&gt; some&gt;&gt;.0 in closure #1 () -&gt; SwiftUI.ForEach&lt;Swift.Array&lt;AllInOne.DYPieFraction&gt;, AllInOne.DYPieFraction, &lt;&lt;opaque return type of AllInOne.DYFractionChartLegendView.content(fraction: AllInOne.DYPieFraction) -&gt; some&gt;&gt;.0&gt; in closure #1 (Swift.Array&lt;AllInOne.DYPieFraction&gt;) -&gt; SwiftUI.HStack&lt;SwiftUI.ForEach&lt;Swift.Array&lt;AllInOne.DYPieFraction&gt;, AllInOne.DYPieFraction, &lt;&lt;opaque return type of AllInOne.DYFractionChartLegendView.content(fraction: AllInOne.DYPieFraction) -&gt; some&gt;&gt;.0&gt;&gt; in closure #1 () -&gt; SwiftUI.ForEach&lt;Swift.Array&lt;Swift.Array&lt;AllInOne.DYPieFraction&gt;&gt;, Swift.Array&lt;AllInOne.DYPieFraction&gt;, SwiftUI.HStack&lt;SwiftUI.ForEach&lt;Swift.Array&lt;AllInOne.DYPieFraction&gt;, AllInOne.DYPieFraction, &lt;&lt;opaque return type of AllInOne.DYFractionChartLegendView.content(fraction: AllInOne.DYPieFraction) -&gt; some&gt;&gt;.0&gt;&gt;&gt; in closure #1 () -&gt; &lt;&lt;opaque return type of SwiftUI.View.padding(SwiftUI.Edge.Set, Swift.Optional&lt;CoreGraphics.CGFloat&gt;) -&gt; some&gt;&gt;.0 in AllInOne.DYFractionChartLegendView.body.getter : some"
                  moduleName = "AllInOne"
                  usesParentBreakpointCondition = "Yes"
                  urlString = "file:///Users/suris/Documents/GitHub/AllInOne/AllInOne/SwiftUIGraphs/Views/Pie%20Chart/DYFractionChartLegendView.swift"
                  startingColumnNumber = "9223372036854775807"
                  endingColumnNumber = "9223372036854775807"
                  startingLineNumber = "44"
                  endingLineNumber = "44"
                  offsetFromSymbolStart = "72">
               </Location>
               <Location
                  uuid = "173A89F0-8E44-4684-9139-56E799CCBCB5 - c4ee00fe221e14a"
                  shouldBeEnabled = "Yes"
                  ignoreCount = "0"
                  continueAfterRunningActions = "No"
                  symbolName = "closure #1 () -&gt; SwiftUI.ForEach&lt;Swift.Array&lt;AllInOne.DYPieFraction&gt;, AllInOne.DYPieFraction, &lt;&lt;opaque return type of AllInOne.DYFractionChartLegendView.content(fraction: AllInOne.DYPieFraction) -&gt; some&gt;&gt;.0&gt; in closure #1 (Swift.Array&lt;AllInOne.DYPieFraction&gt;) -&gt; SwiftUI.HStack&lt;SwiftUI.ForEach&lt;Swift.Array&lt;AllInOne.DYPieFraction&gt;, AllInOne.DYPieFraction, &lt;&lt;opaque return type of AllInOne.DYFractionChartLegendView.content(fraction: AllInOne.DYPieFraction) -&gt; some&gt;&gt;.0&gt;&gt; in closure #1 () -&gt; SwiftUI.ForEach&lt;Swift.Array&lt;Swift.Array&lt;AllInOne.DYPieFraction&gt;&gt;, Swift.Array&lt;AllInOne.DYPieFraction&gt;, SwiftUI.HStack&lt;SwiftUI.ForEach&lt;Swift.Array&lt;AllInOne.DYPieFraction&gt;, AllInOne.DYPieFraction, &lt;&lt;opaque return type of AllInOne.DYFractionChartLegendView.content(fraction: AllInOne.DYPieFraction) -&gt; some&gt;&gt;.0&gt;&gt;&gt; in closure #1 () -&gt; &lt;&lt;opaque return type of SwiftUI.View.padding(SwiftUI.Edge.Set, Swift.Optional&lt;CoreGraphics.CGFloat&gt;) -&gt; some&gt;&gt;.0 in closure #1 (SwiftUI.GeometryProxy) -&gt; SwiftUI.TupleView&lt;(&lt;&lt;opaque return type of SwiftUI.View.frame(width: Swift.Optional&lt;CoreGraphics.CGFloat&gt;, height: Swift.Optional&lt;CoreGraphics.CGFloat&gt;, alignment: SwiftUI.Alignment) -&gt; some&gt;&gt;.0, SwiftUI.VStack&lt;&lt;&lt;opaque return type of SwiftUI.View.padding(SwiftUI.Edge.Set, Swift.Optional&lt;CoreGraphics.CGFloat&gt;) -&gt; some&gt;&gt;.0&gt;)&gt; in AllInOne.DYFractionChartLegendView.body.getter : some"
                  moduleName = "AllInOne"
                  usesParentBreakpointCondition = "Yes"
                  urlString = "file:///Users/suris/Documents/GitHub/AllInOne/AllInOne/SwiftUIGraphs/Views/Pie%20Chart/DYFractionChartLegendView.swift"
                  startingColumnNumber = "9223372036854775807"
                  endingColumnNumber = "9223372036854775807"
                  startingLineNumber = "41"
                  endingLineNumber = "41"
                  offsetFromSymbolStart = "148">
               </Location>
               <Location
                  uuid = "173A89F0-8E44-4684-9139-56E799CCBCB5 - c6a481a522088e4f"
                  shouldBeEnabled = "Yes"
                  ignoreCount = "0"
                  continueAfterRunningActions = "No"
                  symbolName = "closure #1 (AllInOne.DYPieFraction) -&gt; &lt;&lt;opaque return type of AllInOne.DYFractionChartLegendView.content(fraction: AllInOne.DYPieFraction) -&gt; some&gt;&gt;.0 in closure #1 () -&gt; SwiftUI.ForEach&lt;Swift.Array&lt;AllInOne.DYPieFraction&gt;, AllInOne.DYPieFraction, &lt;&lt;opaque return type of AllInOne.DYFractionChartLegendView.content(fraction: AllInOne.DYPieFraction) -&gt; some&gt;&gt;.0&gt; in closure #1 (Swift.Array&lt;AllInOne.DYPieFraction&gt;) -&gt; SwiftUI.HStack&lt;SwiftUI.ForEach&lt;Swift.Array&lt;AllInOne.DYPieFraction&gt;, AllInOne.DYPieFraction, &lt;&lt;opaque return type of AllInOne.DYFractionChartLegendView.content(fraction: AllInOne.DYPieFraction) -&gt; some&gt;&gt;.0&gt;&gt; in closure #1 () -&gt; SwiftUI.ForEach&lt;Swift.Array&lt;Swift.Array&lt;AllInOne.DYPieFraction&gt;&gt;, Swift.Array&lt;AllInOne.DYPieFraction&gt;, SwiftUI.HStack&lt;SwiftUI.ForEach&lt;Swift.Array&lt;AllInOne.DYPieFraction&gt;, AllInOne.DYPieFraction, &lt;&lt;opaque return type of AllInOne.DYFractionChartLegendView.content(fraction: AllInOne.DYPieFraction) -&gt; some&gt;&gt;.0&gt;&gt;&gt; in closure #1 () -&gt; &lt;&lt;opaque return type of SwiftUI.View.padding(SwiftUI.Edge.Set, Swift.Optional&lt;CoreGraphics.CGFloat&gt;) -&gt; some&gt;&gt;.0 in closure #1 (SwiftUI.GeometryProxy) -&gt; SwiftUI.TupleView&lt;(&lt;&lt;opaque return type of SwiftUI.View.frame(width: Swift.Optional&lt;CoreGraphics.CGFloat&gt;, height: Swift.Optional&lt;CoreGraphics.CGFloat&gt;, alignment: SwiftUI.Alignment) -&gt; some&gt;&gt;.0, SwiftUI.VStack&lt;&lt;&lt;opaque return type of SwiftUI.View.padding(SwiftUI.Edge.Set, Swift.Optional&lt;CoreGraphics.CGFloat&gt;) -&gt; some&gt;&gt;.0&gt;)&gt; in AllInOne.DYFractionChartLegendView.body.getter : some"
                  moduleName = "AllInOne"
                  usesParentBreakpointCondition = "Yes"
                  urlString = "file:///Users/suris/Documents/GitHub/AllInOne/AllInOne/SwiftUIGraphs/Views/Pie%20Chart/DYFractionChartLegendView.swift"
                  startingColumnNumber = "9223372036854775807"
                  endingColumnNumber = "9223372036854775807"
                  startingLineNumber = "42"
                  endingLineNumber = "42"
                  offsetFromSymbolStart = "72">
               </Location>
            </Locations>
         </BreakpointContent>
      </BreakpointProxy>
   </Breakpoints>
</Bucket>
